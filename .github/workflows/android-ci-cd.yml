name: Android CI/CD

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type (debug/release)'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release

env:
  GRADLE_OPTS: -Dorg.gradle.jvmargs=-Xmx2048m -Dorg.gradle.parallel=true

jobs:
  build:
    name: Build Android App
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🚀 Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: 📱 Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: 🔧 Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 🔍 Validate Gradle wrapper
        run: ./gradlew wrapper --validate-only

      - name: 🧹 Clean project
        run: ./gradlew clean

      - name: 🔍 Run tests
        run: ./gradlew test

      - name: 📱 Build Debug APK
        if: github.event.inputs.build_type != 'release' || github.event_name != 'workflow_dispatch'
        run: ./gradlew assembleDebug
        env:
          GRADLE_OPTS: -Dorg.gradle.jvmargs=-Xmx2048m

      - name: 📦 Build Release APK
        if: github.event.inputs.build_type == 'release' || github.event_name != 'workflow_dispatch'
        run: ./gradlew assembleRelease
        env:
          GRADLE_OPTS: -Dorg.gradle.jvmargs=-Xmx2048m

      - name: 📊 Generate Build Report
        run: ./gradlew build --scan

      - name: 📁 Upload Debug APK
        if: github.event.inputs.build_type != 'release' || github.event_name != 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk
          retention-days: 30

      - name: 📁 Upload Release APK
        if: github.event.inputs.build_type == 'release' || github.event_name != 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release.apk
          retention-days: 30

      - name: 📋 Upload Build Reports
        uses: actions/upload-artifact@v4
        with:
          name: build-reports
          path: |
            app/build/reports/
            app/build/outputs/
          retention-days: 7

  test:
    name: Run Instrumented Tests
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: 📱 Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: 🔧 Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 📱 Run Instrumented Tests
        run: ./gradlew connectedAndroidTest

      - name: 📋 Upload Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: app/build/reports/androidTests/
          retention-days: 7

  lint:
    name: Run Lint Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: 📱 Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: 🔧 Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 🔍 Run Lint
        run: ./gradlew lint

      - name: 📋 Upload Lint Reports
        uses: actions/upload-artifact@v4
        with:
          name: lint-reports
          path: app/build/reports/lint-results.html
          retention-days: 7

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Run Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'MyApplication'
          path: '.'
          format: 'HTML'
          out: 'reports'

      - name: 📋 Upload Security Reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: reports/
          retention-days: 7 